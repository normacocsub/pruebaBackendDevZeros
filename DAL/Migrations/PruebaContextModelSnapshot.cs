// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(PruebaContext))]
    partial class PruebaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Entity.Library", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Libraries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Robin Sharma",
                            FechaCreacion = new DateTime(2022, 1, 9, 18, 27, 37, 873, DateTimeKind.Local).AddTicks(132),
                            FechaModificacion = new DateTime(2022, 1, 9, 18, 27, 37, 873, DateTimeKind.Local).AddTicks(149),
                            Genre = "Fiction",
                            Price = 141m,
                            Publisher = "Jaiko Publishing House",
                            Title = "The Monk Who Sold His Ferrari"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Stephen W Hawking",
                            FechaCreacion = new DateTime(2022, 1, 9, 18, 27, 37, 873, DateTimeKind.Local).AddTicks(164),
                            FechaModificacion = new DateTime(2022, 1, 9, 18, 27, 37, 873, DateTimeKind.Local).AddTicks(165),
                            Genre = "Engineering & Technology",
                            Price = 149m,
                            Publisher = "Jaiko Publishing House",
                            Title = "The Theory Of Everything"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Robert T. Kiyosaki",
                            FechaCreacion = new DateTime(2022, 1, 9, 18, 27, 37, 873, DateTimeKind.Local).AddTicks(168),
                            FechaModificacion = new DateTime(2022, 1, 9, 18, 27, 37, 873, DateTimeKind.Local).AddTicks(169),
                            Genre = "Personal Finance",
                            Price = 288m,
                            Publisher = "Plata Publishing",
                            Title = "Rich Dad Poor Dad"
                        });
                });

            modelBuilder.Entity("Entity.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("Entity.Permiso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Permisos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Permiso para guardar libros",
                            FechaCreacion = new DateTime(2022, 1, 9, 18, 27, 37, 882, DateTimeKind.Local).AddTicks(2451),
                            FechaModificacion = new DateTime(2022, 1, 9, 18, 27, 37, 882, DateTimeKind.Local).AddTicks(2452),
                            Nombre = "GuardarLibro"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Permiso para Buscar Libros",
                            FechaCreacion = new DateTime(2022, 1, 9, 18, 27, 37, 882, DateTimeKind.Local).AddTicks(2460),
                            FechaModificacion = new DateTime(2022, 1, 9, 18, 27, 37, 882, DateTimeKind.Local).AddTicks(2461),
                            Nombre = "BuscarLibro"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Permiso para Actualizar Libros",
                            FechaCreacion = new DateTime(2022, 1, 9, 18, 27, 37, 882, DateTimeKind.Local).AddTicks(2463),
                            FechaModificacion = new DateTime(2022, 1, 9, 18, 27, 37, 882, DateTimeKind.Local).AddTicks(2464),
                            Nombre = "ActualizarLibro"
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "Permiso para Eliminar Libros",
                            FechaCreacion = new DateTime(2022, 1, 9, 18, 27, 37, 882, DateTimeKind.Local).AddTicks(2467),
                            FechaModificacion = new DateTime(2022, 1, 9, 18, 27, 37, 882, DateTimeKind.Local).AddTicks(2468),
                            Nombre = "EliminarLibro"
                        });
                });

            modelBuilder.Entity("Entity.PermisosRol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPermiso")
                        .HasColumnType("int");

                    b.Property<int>("IdRole")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdPermiso");

                    b.HasIndex("IdRole");

                    b.ToTable("PermisosRols");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FechaCreacion = new DateTime(2022, 1, 9, 18, 27, 37, 882, DateTimeKind.Local).AddTicks(2505),
                            FechaModificacion = new DateTime(2022, 1, 9, 18, 27, 37, 882, DateTimeKind.Local).AddTicks(2506),
                            IdPermiso = 1,
                            IdRole = 1
                        },
                        new
                        {
                            Id = 2,
                            FechaCreacion = new DateTime(2022, 1, 9, 18, 27, 37, 882, DateTimeKind.Local).AddTicks(2511),
                            FechaModificacion = new DateTime(2022, 1, 9, 18, 27, 37, 882, DateTimeKind.Local).AddTicks(2512),
                            IdPermiso = 2,
                            IdRole = 1
                        },
                        new
                        {
                            Id = 3,
                            FechaCreacion = new DateTime(2022, 1, 9, 18, 27, 37, 882, DateTimeKind.Local).AddTicks(2514),
                            FechaModificacion = new DateTime(2022, 1, 9, 18, 27, 37, 882, DateTimeKind.Local).AddTicks(2515),
                            IdPermiso = 3,
                            IdRole = 1
                        },
                        new
                        {
                            Id = 4,
                            FechaCreacion = new DateTime(2022, 1, 9, 18, 27, 37, 882, DateTimeKind.Local).AddTicks(2517),
                            FechaModificacion = new DateTime(2022, 1, 9, 18, 27, 37, 882, DateTimeKind.Local).AddTicks(2518),
                            IdPermiso = 4,
                            IdRole = 1
                        });
                });

            modelBuilder.Entity("Entity.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Rol con privilegios",
                            FechaCreacion = new DateTime(2022, 1, 9, 18, 27, 37, 882, DateTimeKind.Local).AddTicks(2272),
                            FechaModificacion = new DateTime(2022, 1, 9, 18, 27, 37, 882, DateTimeKind.Local).AddTicks(2286),
                            Nombre = "Administrador"
                        });
                });

            modelBuilder.Entity("Entity.UsersRols", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdRole")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdRole");

                    b.HasIndex("IdUser");

                    b.ToTable("UsersRols");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FechaCreacion = new DateTime(2022, 1, 9, 18, 27, 37, 882, DateTimeKind.Local).AddTicks(2559),
                            FechaModificacion = new DateTime(2022, 1, 9, 18, 27, 37, 882, DateTimeKind.Local).AddTicks(2560),
                            IdRole = 1,
                            IdUser = 1
                        });
                });

            modelBuilder.Entity("Entity.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apellidos = "Vega",
                            Correo = "Admin@gmail.com",
                            FechaCreacion = new DateTime(2022, 1, 9, 18, 27, 37, 873, DateTimeKind.Local).AddTicks(215),
                            FechaModificacion = new DateTime(2022, 1, 9, 18, 27, 37, 873, DateTimeKind.Local).AddTicks(216),
                            Hash = "$MYHASH$V1$10000$B1i0fXTXROH0Prv3+53pRytaCz/kVaZkpdV/ZmU+HmJ4Kwzo",
                            Nombres = "Fernando"
                        });
                });

            modelBuilder.Entity("Entity.PermisosRol", b =>
                {
                    b.HasOne("Entity.Permiso", null)
                        .WithMany()
                        .HasForeignKey("IdPermiso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Rol", null)
                        .WithMany()
                        .HasForeignKey("IdRole")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entity.UsersRols", b =>
                {
                    b.HasOne("Entity.Rol", null)
                        .WithMany()
                        .HasForeignKey("IdRole")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Usuario", null)
                        .WithMany()
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
